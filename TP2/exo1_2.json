{ // JSON5
  v: 6,
  components: {
    in0: {type: 'in', pos: [475, -885], id: '0-3', bits: 4, val: '1011'},
    out0: {type: 'out', pos: [1500, -965], id: '8-11', bits: 4},
    in2: {type: 'in', pos: [440, -1105], id: 24},
    xor0: {type: 'xor', pos: [660, -1095], in: [31, 32], out: 33},
    and0: {type: 'and', pos: [950, -940], in: [34, 35], out: 36},
    and1: {type: 'and', pos: [890, -1015], in: [40, 41], out: 42},
    xor1: {type: 'xor', pos: [655, -1160], in: [43, 44], out: 45},
    and2: {type: 'and', pos: [775, -1115], in: [46, 47], out: 48},
    and3: {type: 'and', pos: [965, -880], in: [49, 50], out: 51},
    and4: {type: 'and', pos: [1195, -1155], in: [58, 59], out: 60},
    or0: {type: 'or', pos: [1170, -1045], in: [61, 62], out: 63},
    xor2: {type: 'xor', pos: [670, -805], in: [64, 65], out: 66},
    and5: {type: 'and', pos: [975, -815], in: [67, 68], out: 69},
    or1: {type: 'or', pos: [1080, -850], in: [73, 74], out: 75},
    in1: {type: 'in', pos: [330, -475], id: [{id: 96, color: 'yellow'}, {id: 97, color: 'red'}, 98, 99], bits: 4, val: '1110'},
    xor3: {type: 'xor', pos: [475, -515], in: [100, 101], out: 102},
    xor4: {type: 'xor', pos: [700, -570], in: [103, 104], out: 105},
    xor5: {type: 'xor', pos: [1035, -615], in: [106, 107], out: 108},
    in3: {type: 'in', pos: [235, -565], id: 112, val: 1},
    and6: {type: 'and', pos: [600, -505], in: [113, 114], out: {id: 115, color: 'yellow'}},
    out1: {type: 'out', pos: [1610, -440], id: '116-119', bits: 4},
    and7: {type: 'and', pos: [475, -575], in: [120, 121], out: 122},
    and8: {type: 'and', pos: [570, -440], in: [126, 127], out: {id: 128, color: 'red'}},
    and9: {type: 'and', pos: [780, -560], in: [129, 130], out: 131},
    or3: {type: 'or', pos: [860, -550], in: [132, 133], out: 134},
    and10: {type: 'and', pos: [1115, -605], in: [135, 136], out: 137},
    or4: {type: 'or', pos: [1225, -595], in: [138, 139], out: 140},
    xor7: {type: 'xor', pos: [480, -360], in: [141, 142], out: 143},
    and11: {type: 'and', pos: [560, -350], in: [144, 145], out: 146},
    and12: {type: 'and', pos: [780, -395], in: [147, 148], out: 149},
    or2: {type: 'or', pos: [1095, -430], in: [150, 151], out: 152},
    and13: {type: 'and', pos: [645, -210], in: [153, 154], out: 155},
    or5: {type: 'or', pos: [880, -260], in: [156, 157], out: 158},
    in4: {type: 'in', pos: [270, 110], id: 159},
    in5: {type: 'in', pos: [255, 20], id: 160, val: 1},
    xor6: {type: 'xor', pos: [425, 30], in: [161, 162], out: 163},
    and14: {type: 'and', pos: [495, -5], in: [164, 165], out: 166},
    out2: {type: 'out', pos: [605, -5], id: 167},
    in6: {type: 'in', pos: [265, 215], id: 168},
    in7: {type: 'in', pos: [260, 295], id: 169},
    xor8: {type: 'xor', pos: [430, 235], in: [170, 171], out: 172},
    and15: {type: 'and', pos: [510, 245], in: [173, 174], out: 175},
    out3: {type: 'out', pos: [580, 245], id: 176},
    xor9: {type: 'xor', pos: [425, 400], in: [177, 178], out: 179},
    not0: {type: 'not', pos: [505, 400], in: 180, out: 181},
    in8: {type: 'in', pos: [265, 385], id: 182},
    in9: {type: 'in', pos: [260, 425], id: 183},
    out4: {type: 'out', pos: [575, 400], id: 184},
    out6: {type: 'out', pos: [610, 50], id: 221},
    not1: {type: 'not', pos: [540, 50], in: 222, out: 223},
    and16: {type: 'and', pos: [505, 105], in: [224, 225], out: 226},
    out7: {type: 'out', pos: [575, 105], id: 227},
    xor10: {type: 'xor', pos: [400, 560], in: [232, 233], out: 234},
    and17: {type: 'and', pos: [480, 525], in: [235, 236], out: 237},
    and18: {type: 'and', pos: [480, 595], in: [238, 239], out: 240},
    not2: {type: 'not', pos: [545, 560], in: 241, out: 242},
    out5: {type: 'out', pos: [765, 510], id: 243},
    out8: {type: 'out', pos: [765, 575], id: 244},
    out9: {type: 'out', pos: [765, 630], id: 245},
    in10: {type: 'in', pos: [210, 590], id: {id: 246, color: 'blue'}},
    in11: {type: 'in', pos: [210, 510], id: {id: 247, color: 'red'}, val: 1},
    in12: {type: 'in', pos: [205, 690], id: {id: 254, color: 'yellow'}},
    in13: {type: 'in', pos: [205, 785], id: {id: 255, color: 'green'}, val: 1},
    xor11: {type: 'xor', pos: [375, 730], in: [256, 257], out: 258},
    and19: {type: 'and', pos: [455, 690], in: [259, 260], out: 261},
    and20: {type: 'and', pos: [455, 775], in: [262, 263], out: 264},
    not3: {type: 'not', pos: [535, 730], in: 265, out: 266},
    and21: {type: 'and', pos: [625, 435], in: [267, 268], out: 269},
    and22: {type: 'and', pos: [625, 785], in: [270, 271], out: 272},
    and23: {type: 'and', pos: [695, 575], in: [273, 274], out: 275},
    or6: {type: 'or', pos: [685, 510], in: [276, 277], out: 278},
    or7: {type: 'or', pos: [705, 630], in: [282, 283], out: 284},
    label0: {type: 'label', pos: [765, -65], text: 'Exercice 2'},
    label1: {type: 'label', pos: [200, 20], text: 'A'},
    label2: {type: 'label', pos: [200, 110], text: 'B'},
    label3: {type: 'label', pos: [665, 0], text: 'A>B'},
    label4: {type: 'label', pos: [670, 110], text: 'A<B'},
    label5: {type: 'label', pos: [210, 210], text: 'A'},
    label6: {type: 'label', pos: [215, 295], text: 'B'},
    label7: {type: 'label', pos: [215, 385], text: 'A'},
    label8: {type: 'label', pos: [210, 425], text: 'B'},
    label9: {type: 'label', pos: [675, 50], text: 'A=B'},
    label10: {type: 'label', pos: [825, 510], text: 'A>B'},
    label11: {type: 'label', pos: [835, 575], text: 'A=B'},
    label12: {type: 'label', pos: [840, 630], text: 'A<B '},
    label13: {type: 'label', pos: [140, 500], text: 'A'},
    label14: {type: 'label', pos: [140, 590], text: 'B'},
    label15: {type: 'label', pos: [140, 690], text: 'A'},
    label16: {type: 'label', pos: [140, 770], text: 'B'},
    label17: {type: 'label', pos: [885, -1225], text: 'Exercice 1'},
  },
  wires: [[36, 11], [24, 31], [24, 34, {via: [[470, -955]]}], [2, 32, {via: [[620, -875, 'n']]}], [2, 35, {via: [[635, -875], [910, -875]]}], [2, 41, {via: [[720, -875], [720, -1005]]}], [33, 40, {via: [[720, -1075, 's'], [850, -1075]]}], [24, 43, {via: [[470, -1170]]}], [1, 44, {via: [[615, -895, 'n']]}], [45, 46, {via: [[695, -1125]]}], [1, 47, {via: [[735, -895]]}], [48, 8, {via: [[1305, -1115], [1305, -1110], [1305, -995]]}], [24, 49, {via: [[470, -895]]}], [1, 50], [0, 58, {via: [[495, -1165]]}], [24, 59, {via: [[1155, -1105]]}], [60, 61, {via: [[1235, -1055, 'w']]}], [42, 62, {via: [[1130, -1015]]}], [63, 9, {via: [[1480, -1045]]}], [66, 67, {via: [[935, -800]]}], [24, 64, {via: [[470, -815, 's']]}], [3, 65, {via: [[495, -795]]}], [3, 68, {via: [[935, -850]]}], [51, 73], [69, 74], [75, 10, {via: [[1480, -855]]}], [96, 101], [112, 100, {via: [[265, -525]]}], [102, 113], [96, 114, {via: [[350, -495]]}], [96, 121, {via: [[350, -565]]}], [112, 120, {via: [[265, -585]]}], [112, 126, {via: [[265, -625], [530, -625]]}], [97, 127, {via: [[530, -485]]}], [97, 103, {via: [[350, -640], [660, -635]]}], [112, 104], [105, 129], [97, 130, {via: [[740, -485]]}], [131, 132], [134, 116, {via: [[1590, -550]]}], [98, 106, {via: [[350, -640]]}], [112, 107, {via: [[265, -610]]}], [108, 135], [98, 136, {via: [[550, -465], [1075, -470]]}], [137, 138], [122, 139, {via: [[1065, -580]]}], [140, 117, {via: [[1590, -595]]}], [99, 141, {via: [[440, -440]]}], [112, 142, {via: [[265, -350, 's']]}], [143, 144], [99, 147, {via: [[740, -445]]}], [112, 148, {via: [[265, -385]]}], [149, 133], [128, 150], [146, 151, {via: [[1055, -350]]}], [152, 118], [99, 145, {via: [[350, -335]]}], [98, 153, {via: [[350, -220]]}], [112, 154, {via: [[265, -200, 's']]}], [115, 156, {via: [[640, -270, 's']]}], [155, 157, {via: [[840, -210]]}], [158, 119, {via: [[1590, -255]]}], [160, 161], [159, 162, {via: [[385, 110]]}], [166, 167], [163, 165], [160, 164, {via: [[300, -15]]}], [172, 173], [168, 170, {via: [[390, 215]]}], [169, 171, {via: [[390, 295]]}], [169, 174, {via: [[470, 295]]}], [175, 176], [179, 180], [182, 177, {via: [[385, 385]]}], [183, 178, {via: [[385, 425]]}], [181, 184], [223, 221], [163, 222], [163, 224], [159, 225], [226, 227], [234, 236], [234, 238], [234, 241], [247, 235, {via: [[245, 510]]}], [246, 239, {via: [[240, 605]]}], [246, 233, {via: [[240, 570]]}], [247, 232, {via: [[240, 550]]}], [254, 256, {via: [[235, 720]]}], [255, 257, {via: [[235, 740]]}], [258, 260], [258, 262], [254, 259, {via: [[235, 675]]}], [255, 263], [258, 265], [242, 267], [261, 268, {via: [[585, 690]]}], [264, 270], [242, 271], [242, 273], [266, 274, {via: [[575, 585, 'n']]}], [275, 244], [269, 276, {via: [[645, 435, 's']]}], [237, 277], [278, 243], [284, 245], [240, 282, {via: [[520, 620]]}], [272, 283]]
}